<!DOCTYPE html>
<html lang="ka">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>საქართველო - სიტყვების თამაში</title>
<style>
  body {
    background: linear-gradient(135deg, #e0f7fa, #80deea);
    font-family: 'Sylfaen', Tahoma, sans-serif;
    color: #01579b;
    margin: 0; padding: 0;
    display: flex;
    flex-direction: column;
    min-height: 100vh;
  }
  header {
    background: #0288d1;
    color: white;
    padding: 1rem;
    text-align: center;
    font-size: 2rem;
    font-weight: bold;
    letter-spacing: 0.1em;
    user-select: none;
  }
  main {
    flex: 1;
    padding: 1rem;
    max-width: 600px;
    margin: auto;
  }
  .scoreboard, .timer, .hints, .level-select {
    margin: 1rem 0;
    font-weight: 600;
    font-size: 1.1rem;
  }
  .letters-container {
    margin: 1rem 0;
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 8px;
  }
  button.letter {
    background: #03a9f4;
    border: none;
    border-radius: 5px;
    color: white;
    font-size: 1.3rem;
    width: 48px;
    height: 48px;
    cursor: pointer;
    user-select: none;
    transition: background 0.3s ease;
  }
  button.letter:disabled {
    background: #81d4fa;
    cursor: default;
  }
  .word-display {
    font-size: 2rem;
    letter-spacing: 0.25em;
    text-align: center;
    margin: 1.5rem 0;
    min-height: 50px;
  }
  .controls {
    display: flex;
    justify-content: center;
    gap: 12px;
    margin-top: 1rem;
  }
  button.control {
    background: #0288d1;
    border: none;
    border-radius: 6px;
    padding: 0.6rem 1.2rem;
    color: white;
    font-weight: 700;
    font-size: 1rem;
    cursor: pointer;
    user-select: none;
    transition: background 0.3s ease;
  }
  button.control:hover {
    background: #0277bd;
  }
  .message {
    text-align: center;
    font-size: 1.2rem;
    color: #004d40;
    min-height: 30px;
    margin-top: 1rem;
    user-select: none;
  }
  .footer {
    text-align: center;
    font-size: 0.9rem;
    color: #0288d1;
    padding: 0.8rem;
    user-select: none;
  }
  select {
    padding: 0.3rem 0.5rem;
    font-size: 1rem;
    border-radius: 5px;
    border: 1px solid #0288d1;
    color: #01579b;
  }
</style>
</head>
<body>

<header>საქართველო - სიტყვების გამოცნობა</header>

<main>

  <div class="level-select">
    დონე: 
    <select id="levelSelect">
      <option value="easy">მარტივი</option>
      <option value="medium">საშუალო</option>
      <option value="hard">რთული</option>
    </select>
  </div>

  <div class="scoreboard">ქულები: <span id="score">0</span></div>
  <div class="timer">დრო დარჩა: <span id="time">60</span> წმ.</div>
  <div class="hints">მინიშნებები დარჩა: <span id="hintsLeft">3</span></div>

  <div class="word-display" id="wordDisplay">_ _ _ _ _ _ _</div>

  <div class="letters-container" id="lettersContainer"></div>

  <div class="controls">
    <button class="control" id="btnHint">მინიშნის მიღება</button>
    <button class="control" id="btnNewWord">ახალი სიტყვა</button>
    <button class="control" id="btnReset">სავარჯიშოს დასაწყებად</button>
  </div>

  <div class="message" id="message"></div>

</main>

<div class="footer">© 2025 საქართველო თამაშის ავტორი</div>

<script>
(() => {
  'use strict';

  // სიტყვების ბაზა: სირთულის მიხედვით
  const wordBank = {
    easy: [
      "მზიანი",
      "თბილი",
      "სიყვარული",
      "სახლი",
      "მეგობარი",
      "დედა",
      "მამა",
      "გული",
      "პატარა",
      "გრძელი"
    ],
    medium: [
      "განსაკუთრებული",
      "მაღაზიაში",
      "განსაზღვრული",
      "დამოუკიდებელი",
      "მნიშვნელოვანი",
      "მოთხოვნადი",
      "მიუთითებელი",
      "შესაძლებელი",
      "საინტერესო",
      "პიროვნება"
    ],
    hard: [
      "დაბრკოლება",
      "არასწორად",
      "გამოსწორება",
      "პროფესიონალი",
      "პერსონალური",
      "მიკროსკოპული",
      "ინფორმატიკა",
      "დამხმარე",
      "საერთაშორისო",
      "გამოყენება"
    ]
  };

  // სათამაშო პარამეტრები
  const MAX_HINTS = 3;
  const MAX_ERRORS = 5;
  const TOTAL_TIME = 60; // წამებში

  // თამაში - მდგომარეობის შენახვა
  let currentWord = '';
  let currentLetters = [];
  let guessedLetters = [];
  let score = 0;
  let hintsLeft = MAX_HINTS;
  let errors = 0;
  let timerId = null;
  let timeLeft = TOTAL_TIME;

  // ელემენტები DOM-ში
  const levelSelect = document.getElementById('levelSelect');
  const scoreEl = document.getElementById('score');
  const timeEl = document.getElementById('time');
  const hintsEl = document.getElementById('hintsLeft');
  const wordDisplay = document.getElementById('wordDisplay');
  const lettersContainer = document.getElementById('lettersContainer');
  const messageEl = document.getElementById('message');
  const btnHint = document.getElementById('btnHint');
  const btnNewWord = document.getElementById('btnNewWord');
  const btnReset = document.getElementById('btnReset');

  // დაწერა ფუნქციები

  function shuffleArray(array) {
    for (let i = array.length -1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i+1));
      [array[i], array[j]] = [array[j], array[i]];
    }
  }

  function startTimer() {
    clearInterval(timerId);
    timeLeft = TOTAL_TIME;
    timeEl.textContent = timeLeft;
    timerId = setInterval(() => {
      timeLeft--;
      timeEl.textContent = timeLeft;
      if(timeLeft <= 0) {
        clearInterval(timerId);
        endGame(false);
      }
    }, 1000);
  }

  function pickWord() {
    const level = levelSelect.value;
    const list = wordBank[level];
    currentWord = list[Math.floor(Math.random() * list.length)];
    currentLetters = currentWord.split('');
    guessedLetters = new Array(currentLetters.length).fill(false);
    errors = 0;
    hintsLeft = MAX_HINTS;
    hintsEl.textContent = hintsLeft;
    updateWordDisplay();
    generateLetterButtons();
    messageEl.textContent = '';
    startTimer();
  }

  function updateWordDisplay() {
    let displayStr = '';
    for(let i=0; i<currentLetters.length; i++) {
      displayStr += guessedLetters[i] ? currentLetters[i] : '_';
      if(i < currentLetters.length-1) displayStr += ' ';
    }
    wordDisplay.textContent = displayStr;
  }

  function generateLetterButtons() {
    lettersContainer.innerHTML = '';
    let letters = currentWord.split('');
    // შერევა ასოების
    shuffleArray(letters);
    // დავამატოთ კიდევ რამდენიმე ასო (შეუძლია შეცდომების)
    const extraLetters = ['ა','ბ','გ','დ','ე','ვ','ზ','თ','ი','კ','ლ','მ','ნ','ო','პ','ჟ','რ','ს','ტ','უ','ფ','ქ','ღ','ყ','შ','ჩ','ც','ძ','წ','ჭ','ხ','ჯ','ჰ'];
    while(letters.length < Math.max(currentLetters.length + 5, 12)) {
      const randLetter = extraLetters[Math.floor(Math.random() * extraLetters.length)];
      if(!letters.includes(randLetter)) letters.push(randLetter);
    }
    shuffleArray(letters);
    // შექმენით ღილაკები
    letters.forEach(letter => {
      const btn = document.createElement('button');
      btn.textContent = letter;
      btn.className = 'letter';
      btn.onclick = () => selectLetter(letter, btn);
      lettersContainer.appendChild(btn);
    });
  }

  function selectLetter(letter, btn) {
    if(currentLetters.includes(letter)) {
      // სწორია ასო
      currentLetters.forEach((ltr,i) => {
        if(ltr === letter) guessedLetters[i] = true;
      });
      btn.disabled = true;
      updateWordDisplay();
      checkWin();
    } else {
      errors++;
      btn.disabled = true;
      messageEl.textContent = `შეცდომები: ${errors}/${MAX_ERRORS}`;
      if(errors >= MAX_ERRORS) {
        endGame(false);
      }
    }
  }

  function checkWin() {
    if(guessedLetters.every(v => v)) {
      score += 10 * (levelSelect.value === 'easy' ? 1 : levelSelect.value === 'medium' ? 2 : 3);
      scoreEl.textContent = score;
      messageEl.textContent = 'გილოცავ! სწორად გამოიცანი სიტყვა.';
      clearInterval(timerId);
    }
  }

  function endGame(won) {
    if(!won) {
      messageEl.textContent = `დრო ამოიწურა ან შეცდომები აღემატება ${MAX_ERRORS}. სიტყვა იყო: ${currentWord}`;
    }
    disableLetters(true);
  }

  function disableLetters(disable) {
    const buttons = lettersContainer.querySelectorAll('button');
    buttons.forEach(btn => btn.disabled = disable);
  }

  function giveHint() {
    if(hintsLeft <= 0) {
      messageEl.textContent = 'მინიშნებები ამოიწურა!';
      return;
    }
    // ვპოულობთ არამინიშნებულ ასოს
    for(let i=0; i<guessedLetters.length; i++) {
      if(!guessedLetters[i]) {
        guessedLetters[i] = true;
        score = Math.max(0, score - 2);
        scoreEl.textContent = score;
        hintsLeft--;
        hintsEl.textContent = hintsLeft;
        updateWordDisplay();
        messageEl.textContent = `მინიშნება: ასო "${currentLetters[i]}" გამოვაჩინე. ქულა -2.`;
        checkWin();
        return;
      }
    }
  }

  // მოვლენების მიბმა

  btnHint.onclick = giveHint;
  btnNewWord.onclick = () => {
    disableLetters(false);
    pickWord();
    messageEl.textContent = '';
  };
  btnReset.onclick = () => {
    score = 0;
    scoreEl.textContent = score;
    disableLetters(false);
    pickWord();
    messageEl.textContent = '';
  };
  levelSelect.onchange = () => {
    disableLetters(false);
    pickWord();
    messageEl.textContent = '';
  };

  // თამაშის დაწყება პირველად
  pickWord();

})();
</script>

</body>
</html>
